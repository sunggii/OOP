#include <iostream>
#include <string>
using namespace std;

class Food
{
private:
    int grade; // 1.มาตรฐาน 2.พรีเมี่ยม
public:
    virtual string getType() = 0;
    Food(int g)
    {
        if (g > 0 && g < 3)
        {
            grade = g;
        }
        else
        {
            grade = 1;
        }
    };
    virtual ~Food()
    {
        cout << "\n~Food ";
        show();
    }

    // get
    int getGrade()
    {
        return grade;
    }

    // show
    virtual void show()
    {
        cout << "grade = " << grade << endl;
    }
};

class Meat : public Food
{
private:
    int type; // 1เนื้อวัว 2.เนื้อหมู 3.เนื้อแกะ
public:
    Meat(int t, int g) : Food(g)
    {
        if (t > 0 && t < 4)
        {
            type = t;
        }
        else
        {
            type = 1;
        }
    }
    ~Meat()
    {
        cout << "~Meat ";
        show();
    }

    // get
    string getType()
    {
        switch (type)
        {
        case 1:
            return "beef";
        case 2:
            return "pork";
        case 3:
            return "lamb";
        default:
            return "beef";
        }
    }
    // show
    void show()
    {
        Food::show();
        cout << "type = " << getType() << endl;
    }
};

class Seafood : public Food
{
private:
    int type; // 1.กุ้ง 2.ปลาหมึก 3.หอย 4.ปลา
public:
    Seafood(int t, int g) : Food(g)
    {
        if (t > 0 && t < 5)
        {
            type = t;
        }
        else
        {
            type = 1;
        }
    }
    ~Seafood()
    {
        cout << "~seafood ";
        show();
    }

    // get
    string getType()
    {
        switch (type)
        {
        case 1:
            return "shrimp";
        case 2:
            return "squit";
        case 3:
            return "shell";
        case 4:
            return "fhish";
        default:
            return "shrimp";
        }
    }
    // show
    void show()
    {
        Food::show();
        cout << "type = " << getType() << endl;
    }
};

class Poultry : public Food
{
private:
    int type; // 1.ไก่ 2.เป็ด
public:
    Poultry(int t, int g) : Food(g)
    {
        if (t > 0 && t < 3)
        {
            type = t;
        }
        else
        {
            type = 1;
        }
    }
    ~Poultry()
    {
        cout << "~Poultry ";
        show();
    }

    // get
    string getType()
    {
        switch (type)
        {
        case 1:
            return "chicken";
        case 2:
            return "duck";
        default:
            return "chicken";
        }
    }
    // show
    void show()
    {
        Food::show();
        cout << "type = " << getType() << endl;
    }
};

//------------------------
ostream &operator<<(ostream &os, Food &a)
{
    a.show();
    return os;
}
//------------------------

class Dish
{
private:
    double price;
    Food **food;
    int num;
    static int count;

public:
    virtual void show() = 0;
    Dish()
    {
        count++;
        setPrice(60);
        food = 0;
        num = 0;
    }
    Dish(Dish &d)
    {
        num = 0;
        food = 0;
        count++;
        setPrice(d.price);
        setNum(d.num);
        for (int i = 0; i < num; i++)
        {
            setFood(i,d.getFood(i));
        }
    }
    virtual ~Dish()
    {
        count--;
        cout << "~Dish ";
        showDish();
        delete[] food;
    }

    // set
    void setPrice(double p)
    {
        if (p >= 0)
        {
            price = p;
        }
        else
        {
            price = 0;
        }
    }
    void setFood(int i, Food *f)
    {
        food[i] = f;
    }
    void setNum(int n)
    {
        if (n < 0) //ถ้าผิดก็ทำให้ถูก
        {
            n = 1;
        }
        if (n == num) //ถ้าเท่าเดิมก็ไม่ทำไร
        {
            return;
        }

        //n >=0 ก็จะลงมาทำ
        num = n;
        delete[] food;
        food = new Food *[num];
        
    }

    // get
    Food *getFood(int i)
    {
        return food[i];
    }
    double getPrice(){
        return price;
    }
    int getNum(){
        return num;
    }

    // show
    void showDish()
    {
        cout << "price = " << price << endl;
        cout << "num = " << num << endl;
        for (int i = 0; i < num; i++)
        {
            food[i]->show();
        }
    }

    static int getCount()
    {
        return count;
    }
};
int Dish::count;

class Khaopad : virtual public Dish
{
private:
    int size; // 1.จานกลาง 2.จานใหญ่
public:
    Khaopad() : Dish()
    {
        setPrice(55);
        setSize(1);
    }
    Khaopad(Khaopad &k):Dish(k) {
        //setPrice(k.getPrice());
        setSize(k.size);
    }
    ~Khaopad()
    {
        cout << "~Khaopad ";
        cout << "size = " << size << endl;
    }

    // set
    void setSize(int s)
    {
        if (s > 0 && s < 3)
        {
            size = s;
        }
        else
        {
            size = 1;
        }
    }
    // get
    int getSize()
    {
        return size;
    }
    // show
    void show()
    {
        Dish::showDish();
        cout << "size = " << size << endl;
    }
};

class Poteak : virtual public Dish
{
private:
    int spicy; // 1.เผ็ดกลาง 2.เผ้ดมาก
public:
    Poteak() : Dish()
    {
        setPrice(350);
        setSpicy(2);
    }
    Poteak(Poteak &p) : Dish(p)
    {
        setPrice(p.getPrice());
        setSpicy(p.spicy);
    }
    ~Poteak()
    {
        cout << "~Poteak ";
        cout << "spicy = " << spicy << endl;
    }

    // set
    void setSpicy(int s)
    {
        if (s > 0 && s < 3)
        {
            spicy = s;
        }
        else
        {
            spicy = 1;
        }
    }
    // get
    int getSpicy()
    {
        return spicy;
    }
    // show
    void show()
    {
        Dish::showDish();
        cout << "spicy = " << spicy << endl;
    }
};

class KhaopadPotaek : public Khaopad, public Poteak
{
private:
    bool special; // 1.เพิ่มเครื่อง 0.ธรรมดา
public:
    KhaopadPotaek() : Dish() //, Khaopad(), Poteak()
    {
        setPrice(150);
        special = false;
        setSize(1);
        setSpicy(1);
    }
    KhaopadPotaek(KhaopadPotaek &kp) : Dish(kp) //, Khaopad(kp), Poteak(kp)
    {
        setPrice(kp.getPrice());
        special = kp.special;
        setSize(kp.getSize());
        setSpicy(kp.getSpicy());
    }
    ~KhaopadPotaek()
    {
        cout << "~KhaopadPotaek";
        cout << "special = " << (special ? "special" : "normal") << endl;
    }

    // get
    bool getSpecial()
    {
        return special;
    }

    // show
    void show()
    {
        Khaopad::show();
        cout << "spicy = " << getSpicy() << endl;
        cout << "special = " << (special ? "special" : "normal") << endl;
    }

    // overlode set
    void setKhaopadPotaek(bool s)
    {
        special = s;
    }
    void setKhaopadPotaek(bool s, int a)
    {
        special = s;
        Khaopad::setSize(a);
    }
    void setKhaopadPotaek(bool s, int a, int b)
    {
        special = s;
        Khaopad::setSize(a);
        Poteak::setSpicy(b);
    }
};
//--------------------------
ostream &operator<<(ostream &os, Dish &d)
{
    d.show();
    return os;
}
//--------------------------

class Pinto
{
private:
    Dish **dish;
    int num;

public:
    Pinto()
    {
        num = 0;
        dish = 0;
    }
    ~Pinto()
    {
        cout << "~Pinto ";
        cout << "num = " << num << endl;
        for (int i = 0; i < num; i++)
        {
            dish[i]->showDish();
        }
    }

    // set
    void setNum(int n)
    {
        if (n < 0)
        {
            n = 1;
        }
        if (n == num)
        {
            return;
        }

        num = n;
        delete[] dish;
        dish = new Dish *[num];
    }
    void setDish(int i, Dish *d)
    {
        dish[i] = d;
    }
    // get
    Dish *getDish(int i)
    {
        return dish[i];
    }
    int getNum(){
        return num;
    }
    double getPrice()
    {
        double total = 0;
        for (int i = 0; i < num; i++)
        {
            total += dish[i]->getPrice();
        }
        return total;
    }
    
    bool operator>(Pinto& p){
        if (getPrice() > p.getPrice())
        {
            return true;
        } else {
            return false;
        }
    }
};

class Box
{
private:
    Pinto **pinto;
    int num;

public:
    Box()
    {
        num = 0;
        pinto = 0;
    }
    ~Box() {}

    // set
    void setNum(int n)
    {
        if (n < 0)
        {
            n = 1;
        }
        if (n == num)
        {
            return;
        }

        num = n;
        delete[] pinto;
        pinto = new Pinto *[num];
    }
    void setPinto(int i, Pinto *p)
    {
        pinto[i] = p;
    }
    // get
    Pinto *getPinto(int i)
    {
        return pinto[i];
    }
    int getNum(){
        return num;
    }
    double getPrice()
    {
        double total = 0;
       for (int i = 0; i < 2; i++)
       {
            total += pinto[i]->getPrice();
       }
        return total;
    }

    //show
    void show(){
        cout << "count of pinto " << num <<endl;
    
        for (int i = 0; i < num; i++)
        {
            cout << "pinto["<< i << "] : count of dish " << getPinto(i)->getNum() <<endl;
            for (int j = 0; j < getPinto(i)->getNum(); j++)
            {
                cout << "dish["<< j << "]: " <<endl;
                getPinto(i)->getDish(j)->showDish();
                cout <<endl;
            }
        }
    }
};

int main(){
    //--------------------------
    cout<< "\n---- Declare *Food[8] -----" <<endl;
    Meat beef(1,2);
    Meat pork(2,2);
    Seafood shpimp(1,1);
    Seafood squit(2,1);
    Seafood shell(3,2);
    Seafood fish(4,1);
    Poultry chicken(1,1);
    Poultry duck(2,1);

    Food *food[8] = {&beef, &pork , &shpimp , &squit, 
                     &shell , &fish , &chicken, &duck};

    for (int i = 0; i < 8; i++)
    {
        food[i]->show();
        cout << endl;
    }
    //--------------------------

    //--------------------------
    cout<< "\n---- Declare Dish -----" <<endl;
    Khaopad *khaopadMuKai  = new Khaopad();
    khaopadMuKai->setSize(1);
    khaopadMuKai->setPrice(80);
    khaopadMuKai->setNum(2);
    khaopadMuKai->setFood(0, food[1]);
    khaopadMuKai->setFood(1, food[6]);
    cout <<"khaopadMuKai:"<< endl;
    cout<< *khaopadMuKai <<endl;

    Poteak *poteak = new Poteak();
    poteak->setSpicy(2);
    poteak->setPrice(220);
    poteak->setNum(1);
    poteak->setFood(0, food[5]);
    cout <<"poteak:" <<endl;
    cout <<*poteak <<endl;

    Khaopad *khaopadBeef = new Khaopad();
    khaopadBeef->setSize(2);
    khaopadBeef->setPrice(150);
    khaopadBeef->setNum(1);
    khaopadBeef->setFood(0 ,food[0]);
    cout <<"khaopadBeef: " <<endl;
    cout <<*khaopadBeef <<endl;

    KhaopadPotaek *khaopadPotaek = new KhaopadPotaek();
    khaopadPotaek->setKhaopadPotaek(false);
    khaopadPotaek->setSpicy(1);
    khaopadPotaek->setSize(1);
    khaopadPotaek->setPrice(160);
    khaopadPotaek->setNum(3);
    khaopadPotaek->setFood(0 ,food[2]);
    khaopadPotaek->setFood(1 ,food[3]);
    khaopadPotaek->setFood(2 ,food[4]);
    cout <<"khaopadPotaek" <<endl;
    cout <<*khaopadPotaek <<endl;
    //--------------------------

    //--------------------------
    cout<< "\n---- Declare Pinto -----" <<endl;
    Pinto *pinto[2];
    pinto[0] = new Pinto();
    pinto[0]->setNum(2);
    pinto[0]->setDish(0 ,khaopadMuKai);
    pinto[0]->setDish(1 ,poteak);

    pinto[1] = new Pinto();
    pinto[1]->setNum(2);
    pinto[1]->setDish(0 ,khaopadBeef);
    pinto[1]->setDish(1 ,khaopadPotaek);

    for (int i = 0; i < 2; i++)
        {
            cout << "\npinto ["<< i << "]: count of dish " << pinto[i]->getNum() <<endl;
            for (int j = 0; j < pinto[i]->getNum(); j++)
            {
                cout << "dish["<< j << "]:" <<endl;
                pinto[i]->getDish(j)->showDish();
                cout <<endl;
            }
        }
    //--------------------------
     cout<< "\n---- Declare Box-----" <<endl;
    Box *box;
    box = new Box();
    box->setNum(2);
    box->setPinto(0, pinto[0]);
    box->setPinto(1, pinto[1]);
    box->show();
    
    cout << "total price = " << box->getPrice() <<endl;

    double total = 0;
    for (int i = 0; i < box->getNum(); i++)
        {
            for (int j = 0; j < box->getPinto(i)->getNum(); j++)
            {
                total += box->getPinto(i)->getDish(j)->getPrice();

            }
        }
    cout << "total price = " << total <<endl;
    //--------------------------

    //--------------------------
    cout << "\n------before set------" <<endl;
    cout <<"khaopadPotaek:" <<endl;
    cout <<*khaopadPotaek <<endl;

    cout << "\n------after set------" <<endl;
    khaopadPotaek->setKhaopadPotaek(true);
    cout <<"khaopadPotaek:" <<endl;
    cout <<*khaopadPotaek <<endl;

    khaopadPotaek->setKhaopadPotaek(true, 2);
    cout <<"khaopadPotaek:" <<endl;
    cout <<*khaopadPotaek <<endl;

    khaopadPotaek->setKhaopadPotaek(true,2,2);
    cout <<"khaopadPotaek:" <<endl;
    cout <<*khaopadPotaek <<endl;
    //--------------------------

    //--------------------------
    cout << "\n----- copy ----- "<<endl;
    Khaopad *khaopadPedYang = new Khaopad();
    khaopadPedYang->setSize(2);
    khaopadPedYang->setPrice(190);
    khaopadPedYang->setNum(1);
    khaopadPedYang->setFood(0, food[7]);

    Khaopad *MyKhaopad = new Khaopad(*khaopadPedYang);
    cout <<"khaopadPedYang:" <<endl;
    cout <<*khaopadPedYang <<endl;

    cout <<"MyKhaopad:" <<endl;
    cout <<*MyKhaopad <<endl;

    delete khaopadPedYang;
    delete MyKhaopad;
    //--------------------------

    //--------------------------
    cout <<"\n----- get Type ----- ";
    for (int i = 0; i < 2; i++)
        {
            cout << "\npinto ["<< i << "]:"<<endl;
            for (int j = 0; j < pinto[i]->getNum(); j++)
            {
                cout << "dish["<< j <<"]: ";
                for (int k = 0; k < pinto[i]->getDish(j)->getNum(); k++)
                {
                    cout << pinto[i]->getDish(j)->getFood(k)->getType() << " ";
                }
                cout<<endl;
                
            }
        }

    //--------------------------
    cout <<"\n----- standrd ----- ";
    int standrd = 0;
    for (int i = 0; i < 2; i++)
        {
            cout << "\npinto ["<< i << "]:"<<endl;
            for (int j = 0; j < pinto[i]->getNum(); j++)
            {
                cout << "dish["<< j <<"]: ";
                for (int k = 0; k < pinto[i]->getDish(j)->getNum(); k++)
                {
                    cout << pinto[i]->getDish(j)->getFood(k)->getGrade() << " ";
                    int g = pinto[i]->getDish(j)->getFood(k)->getGrade();
                    if (g == 1 )
                    {
                        standrd++;
                    }
    
                }
                cout<<endl;
                
            }
        }
    cout << "\nstandrd = " << standrd <<endl;
    //--------------------------

    //--------------------------
    cout <<"\n----- delete ----- " << endl;
    cout << "khaopadPotaek:" <<endl; delete khaopadPotaek;
    cout << "\nkhaopadBeef :" <<endl; delete khaopadBeef;
    cout << "\npoteak :" <<endl; delete poteak ;
    cout << "\nkhaopadMuKai:" <<endl; delete khaopadMuKai;
    //--------------------------

    cout <<"\n--- end ---"<<endl;
}
